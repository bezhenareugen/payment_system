@page "/transfer        alletId}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using PaymentSystem.Shared
@attribute [Authorize]
@inject HttpClient Http




<h3>Tranfser</h3>


@if (wallet == null)
{
    <div>
        Loading...
    </div>
}
else
{
    <div class="card" style="width: 18rem;">
        <div class="card-body">
            <h5 class="card-title">Wallet @wallet.Id</h5>
            <p class="card-text">Amount: @wallet.Amount @wallet.Currency</p>
            <p>UserNAme:</p>
            <input @bind="transferDto.UserName" />
            <p>Amount:</p>
            <input @bind="transferDto.Amount" />
            <button class="btn btn-primary" @onclick="MakeTransfer">Make Transfer</button>
           </div>
    </div>
}

@code {
    [Parameter]
    public string SourceWalletId { get; set; }
    public Wallet wallet { get; set; }


    public TransferDto transferDto { get; set; } = new TransferDto();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            wallet = await Http.GetFromJsonAsync<Wallet>($"api/wallet/{SourceWalletId}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }


    private async Task MakeTransfer()
    {
        try
        {
            transferDto.SourceWalletId = SourceWalletId;
            transferDto.Currency = wallet.Currency;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
